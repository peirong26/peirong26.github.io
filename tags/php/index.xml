<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>php on moco</title>
    <link>https://kywk.github.io/moco/tags/php/</link>
    <description>Recent content in php on moco</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 16 Mar 2021 16:58:20 +0800</lastBuildDate><atom:link href="https://kywk.github.io/moco/tags/php/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在 Ubuntu Server 利用 Nginx 伺服器執行 PHP 程式</title>
      <link>https://kywk.github.io/moco/posts/2021/03/ubuntu_nginx-php/</link>
      <pubDate>Tue, 16 Mar 2021 16:58:20 +0800</pubDate>
      
      <guid>https://kywk.github.io/moco/posts/2021/03/ubuntu_nginx-php/</guid>
      <description>Nginx + PHP on ubuntu 長期以來 Apache Server 的效能與承載數低落, 加上層出不窮的漏洞, 許多人陸續投向 Event-based Server 的懷抱, 例如 Nginx.
Nginx 是一個免費開源且穩定高效的 Web 伺服器程式, 擁有反向代理及負載平衡的功能, 藉由 Non-blocking 與 epool 的特性, 大幅提昇了連線服務量與速度, 成為近年來最為廣泛運用的選擇.
但是 Nginx 只是單純的 HTTP Server, 如果要執行程式, 還得藉助 CGI 的幫忙. Nginx 可以透過 FastCGI 去執行 PHP 程式, 且內建 FastCGI 快取功能. 而第一步需要實現的是如何讓 Nginx 正確的呼叫 PHP.
CGI CGI (Common Gateway Interface) 是用於網頁伺服器的介面標準, 支援 CGI 的網頁伺服器會將其所接收到的 HTTP 請求的內容設成環境變數, 作為某支程式時的環境變數以及標準輸入 (stdin) 輸入的資料. 而該程式標準輸出 (stdout) 的資料則會被網頁伺服器拿來回應給客戶端.
網頁伺服器每次使用 CGI 執行程式時, 都需要建立出新的行程 (fork process), 就像在終端機直接用檔案路徑去執行某支程式.</description>
    </item>
    
  </channel>
</rss>
